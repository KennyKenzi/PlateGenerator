import React, { Component } from 'react';
//import {Dropdown} from 'semantic-ui-react';
import Select from 'react-select'
//import Select from 'react-virtualized-select'
import 'react-virtualized/styles.css'
import 'react-virtualized-select/styles.css'
import DatePicker from 'react-datepicker'
import "react-datepicker/dist/react-datepicker.css"
import calculations from '../configs/calculations'
import apiCalls from '../configs/apis';


class Report extends Component {
    state = {
      
        selectedUserOption: null,
        displayedUser: "",
        displayedUserPlaceholder: "Filter By Person",
        userList:[],
        plateList:[],
        selectedBeforeDate: "",
        selectedAfterDate: "",
        placeholderTextB4:'From',
        placeholderTextAfter: 'To'        

      }



    componentDidMount= async()=>{    
        await calculations.getPlateNumberinDB().then((res)=>{     
            this.setState({plateList:res})
        })
        await calculations.getUsersForList().then((res)=>{
            this.setState({userList:res})
        })   
    }



    onChangeUser=async(e)=>{
        this.setState({displayedUserPlaceholder:e.label})
        this.setState({displayedUser: e.label}, async()=>{
        
        //get plates by user and save to state
        await apiCalls.filterByAll(this.state.displayedUser,this.state.selectedBeforeDate, this.state.selectedAfterDate)
        .then((res)=>{
            this.setState({plateList:res.data})
            })
            this.setDefaultDates(this.state.selectedBeforeDate,this.state.selectedAfterDate)
        })  
    }


    setDefaultDates=(before, after)=>{
        if(before === ""){
            this.setState({selectedBeforeDate: new Date().toDateString()})
        }
        if(after===""){
            this.setState({selectedAfterDate: new Date().toDateString()})
        }
    }

    onChangeDate1 = async(e)=>{
        this.setState({placeholderTextB4: e.toDateString()}) 
        this.setState({selectedBeforeDate: e.toDateString()}, async()=>{
            await apiCalls.filterByAll(this.state.displayedUser,this.state.selectedBeforeDate, this.state.selectedAfterDate) 
            .then((res)=>{
                this.setState({plateList:res.data})
                })
            this.setDefaultDates(this.state.selectedBeforeDate,this.state.selectedAfterDate)
        })
    }
    onChangeDate2 = async(e)=>{
        this.setState({placeholderTextAfter: e.toDateString()}) 
        this.setState({selectedAfterDate: e.toDateString()}, async()=>{
            await apiCalls.filterByAll(this.state.displayedUser,this.state.selectedBeforeDate, this.state.selectedAfterDate)
            .then((res)=>{
                this.setState({plateList:res.data})
                }) 
            this.setDefaultDates(this.state.selectedBeforeDate,this.state.selectedAfterDate)              
        })
    }




    render() { 
        return ( 

            <div>
                <h1>Report Page</h1>

                <div className="form-inline  form-group justify-content-center">
                
                <div style={{width:'10%'}} >
                  <Select   
                    className="search"
                    placeholder={this.state.displayedUserPlaceholder}
                    value={this.state.displayedUser}
                    onChange = {this.onChangeUser}
                    options={this.state.userList}/>  
                </div>
                
                <div>
                  <DatePicker
                  placeholderText={this.state.placeholderTextB4}
                  name="fromDate"
                  id="fromDate"
                  value= {this.state.selectedBeforeDate} 
                  onChange={this.onChangeDate1}
                  className="form-control datepicker"/> 
                </div>

                <div>
                <DatePicker
                  placeholderText={this.state.placeholderTextAfter}
                  name="toDate"
                  id="toDate"
                  value= {this.state.selectedAfterDate} 
                  onChange={this.onChangeDate2}
                  className="form-control datepicker"/> 
                </div>
               
                </div>


                <table className="table">
                        <thead className="thead-dark">
                            <tr>
                            <th scope="col">#</th>
                            <th scope="col">License Plate Number</th>
                            <th scope="col">Generated by:</th>
                            <th scope="col">Generated on:</th>
                            </tr>
                        </thead>
                        <tbody>

                            {this.state.plateList ? 

                                this.state.plateList.map((el)=>{
                                    return(
                                    <tr key={el._id}>
                                        <th scope="row">#</th>
                                        <td>{el.plateNumber}</td>
                                        <td>{el.createdBy}</td>
                                        <td>{el.createdOn.split('T')[0]}</td>
                                    </tr>
                                )}): null}                        

                        </tbody>
                        </table>
            </div>

         );
    }
}
 
export default Report;